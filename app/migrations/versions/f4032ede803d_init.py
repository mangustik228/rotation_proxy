"""init

Revision ID: f4032ede803d
Revises: 
Create Date: 2023-11-23 07:39:15.373053

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f4032ede803d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('service',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('type',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('proxy',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('server', sa.String(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('password', sa.String(), nullable=False),
                    sa.Column('port', sa.Integer(), nullable=False),
                    sa.Column('expire', sa.DateTime(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('location_id', sa.Integer(), nullable=False),
                    sa.Column('service_id', sa.Integer(), nullable=False),
                    sa.Column('type_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['location_id'], ['location.id'], ),
                    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
                    sa.ForeignKeyConstraint(['type_id'], ['type.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username', 'password', 'port',
                                        'server', 'expire', name='unique_value')
                    )
    op.create_table('error',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('proxy_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['proxy_id'], ['proxy.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    conn = op.get_bind()
    conn.execute(sa.text("INSERT INTO type(name) Values('IPv4')"))
    conn.execute(sa.text("INSERT INTO service(name) Values('proxy_io')"))
    conn.execute(sa.text("INSERT INTO location(name) Values('Russia')"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute(sa.text("DELETE FROM error"))
    conn.execute(sa.text("DELETE FROM proxy"))
    conn.execute(sa.text("DELETE FROM type"))
    conn.execute(sa.text("DELETE FROM service"))
    conn.execute(sa.text("DELETE FROM location"))

    op.drop_table('error')
    op.drop_table('proxy')
    op.drop_table('type')
    op.drop_table('service')
    op.drop_table('location')

    # ### end Alembic commands ###
