{"text": "2023-11-21 09:02:57.303 | ERROR    | app.services.startup.startup:prepare_db:9 - An error has been caught in function 'prepare_db', process 'SpawnProcess-16' (64), thread 'MainThread' (139822723413824):\nTraceback (most recent call last):\n\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 552, in _prepare_and_execute\n    self._rows = await prepared_stmt.fetch(*parameters)\n    │    │             │             │      └ ('IPv4',)\n    │    │             │             └ <function PreparedStatement.fetch at 0x7f2b00fae950>\n    │    │             └ <asyncpg.prepared_stmt.PreparedStatement object at 0x7f2b00a97b00>\n    │    └ <member '_rows' of 'AsyncAdapt_asyncpg_cursor' objects>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/asyncpg/prepared_stmt.py\", line 176, in fetch\n    data = await self.__bind_execute(args, 0, timeout)\n                 │                   │        └ None\n                 │                   └ ('IPv4',)\n                 └ <asyncpg.prepared_stmt.PreparedStatement object at 0x7f2b00a97b00>\n  File \"/usr/local/lib/python3.10/site-packages/asyncpg/prepared_stmt.py\", line 241, in __bind_execute\n    data, status, _ = await self.__do_execute(\n                            └ <asyncpg.prepared_stmt.PreparedStatement object at 0x7f2b00a97b00>\n  File \"/usr/local/lib/python3.10/site-packages/asyncpg/prepared_stmt.py\", line 230, in __do_execute\n    return await executor(protocol)\n                 │        └ <asyncpg.protocol.protocol.Protocol object at 0x7f2b00c7c1a0>\n                 └ <function PreparedStatement.__bind_execute.<locals>.<lambda> at 0x7f2b00b6b9a0>\n  File \"asyncpg/protocol/protocol.pyx\", line 201, in bind_execute\n    return await waiter\n\nasyncpg.exceptions.UniqueViolationError: duplicate key value violates unique constraint \"type_title_key\"\nDETAIL:  Key (title)=(IPv4) already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\n\nTraceback (most recent call last):\n\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1965, in _exec_single_context\n    self.dialect.do_execute(\n    │    │       └ <function DefaultDialect.do_execute at 0x7f2b0123a560>\n    │    └ <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x7f2b00c303a0>\n    └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 921, in do_execute\n    cursor.execute(statement, parameters)\n    │      │       │          └ ('IPv4',)\n    │      │       └ 'INSERT INTO type (title) VALUES ($1::VARCHAR) RETURNING type.id'\n    │      └ <function AsyncAdapt_asyncpg_cursor.execute at 0x7f2b00af2050>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 585, in execute\n    self._adapt_connection.await_(\n    │    └ <member '_adapt_connection' of 'AsyncAdapt_asyncpg_cursor' objects>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 125, in await_only\n    return current.driver.switch(awaitable)  # type: ignore[no-any-return]\n           │                     └ <coroutine object AsyncAdapt_asyncpg_cursor._prepare_and_execute at 0x7f2b00b0e960>\n           └ <_AsyncIoGreenlet object at 0x7f2b009b9a00 (otid=0x7f2b01d79e90) dead>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 185, in greenlet_spawn\n    value = await result\n                  └ <coroutine object AsyncAdapt_asyncpg_cursor._prepare_and_execute at 0x7f2b00b0e960>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 564, in _prepare_and_execute\n    self._handle_exception(error)\n    │    └ <function AsyncAdapt_asyncpg_cursor._handle_exception at 0x7f2b00af1ea0>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 515, in _handle_exception\n    self._adapt_connection._handle_exception(error)\n    │    │                                   └ UniqueViolationError('duplicate key value violates unique constraint \"type_title_key\"')\n    │    └ <member '_adapt_connection' of 'AsyncAdapt_asyncpg_cursor' objects>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 802, in _handle_exception\n    raise translated_error from error\n          │                     └ UniqueViolationError('duplicate key value violates unique constraint \"type_title_key\"')\n          └ IntegrityError('<class \\'asyncpg.exceptions.UniqueViolationError\\'>: duplicate key value violates unique constraint \"type_tit...\n\nsqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint \"type_title_key\"\nDETAIL:  Key (title)=(IPv4) already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n  File \"/usr/local/lib/python3.10/multiprocessing/spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n               │     │   └ 4\n               │     └ 7\n               └ <function _main at 0x7f2b038888b0>\n  File \"/usr/local/lib/python3.10/multiprocessing/spawn.py\", line 129, in _main\n    return self._bootstrap(parent_sentinel)\n           │    │          └ 4\n           │    └ <function BaseProcess._bootstrap at 0x7f2b039bc5e0>\n           └ <SpawnProcess name='SpawnProcess-16' parent=1 started>\n  File \"/usr/local/lib/python3.10/multiprocessing/process.py\", line 315, in _bootstrap\n    self.run()\n    │    └ <function BaseProcess.run at 0x7f2b03917be0>\n    └ <SpawnProcess name='SpawnProcess-16' parent=1 started>\n  File \"/usr/local/lib/python3.10/multiprocessing/process.py\", line 108, in run\n    self._target(*self._args, **self._kwargs)\n    │    │        │    │        │    └ {'config': <uvicorn.config.Config object at 0x7f2b038d7700>, 'target': <bound method Server.run of <uvicorn.server.Server obj...\n    │    │        │    │        └ <SpawnProcess name='SpawnProcess-16' parent=1 started>\n    │    │        │    └ ()\n    │    │        └ <SpawnProcess name='SpawnProcess-16' parent=1 started>\n    │    └ <function subprocess_started at 0x7f2b02c07490>\n    └ <SpawnProcess name='SpawnProcess-16' parent=1 started>\n  File \"/usr/local/lib/python3.10/site-packages/uvicorn/_subprocess.py\", line 76, in subprocess_started\n    target(sockets=sockets)\n    │              └ [<socket.socket fd=3, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 8000)>]\n    └ <bound method Server.run of <uvicorn.server.Server object at 0x7f2b038d7ac0>>\n  File \"/usr/local/lib/python3.10/site-packages/uvicorn/server.py\", line 61, in run\n    return asyncio.run(self.serve(sockets=sockets))\n           │       │   │    │             └ [<socket.socket fd=3, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 8000)>]\n           │       │   │    └ <function Server.serve at 0x7f2b02c06b00>\n           │       │   └ <uvicorn.server.Server object at 0x7f2b038d7ac0>\n           │       └ <function run at 0x7f2b02f956c0>\n           └ <module 'asyncio' from '/usr/local/lib/python3.10/asyncio/__init__.py'>\n  File \"/usr/local/lib/python3.10/asyncio/runners.py\", line 44, in run\n    return loop.run_until_complete(main)\n           │    │                  └ <coroutine object Server.serve at 0x7f2b02be1e70>\n           │    └ <function BaseEventLoop.run_until_complete at 0x7f2b02f970a0>\n           └ <_UnixSelectorEventLoop running=True closed=False debug=False>\n  File \"/usr/local/lib/python3.10/asyncio/base_events.py\", line 628, in run_until_complete\n    self.run_forever()\n    │    └ <function BaseEventLoop.run_forever at 0x7f2b02f97010>\n    └ <_UnixSelectorEventLoop running=True closed=False debug=False>\n  File \"/usr/local/lib/python3.10/asyncio/base_events.py\", line 595, in run_forever\n    self._run_once()\n    │    └ <function BaseEventLoop._run_once at 0x7f2b03048b80>\n    └ <_UnixSelectorEventLoop running=True closed=False debug=False>\n  File \"/usr/local/lib/python3.10/asyncio/base_events.py\", line 1881, in _run_once\n    handle._run()\n    │      └ <function Handle._run at 0x7f2b02fd8b80>\n    └ <Handle Task.task_wakeup(<Future finished result=None>)>\n  File \"/usr/local/lib/python3.10/asyncio/events.py\", line 80, in _run\n    self._context.run(self._callback, *self._args)\n    │    │            │    │           │    └ <member '_args' of 'Handle' objects>\n    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>\n    │    │            │    └ <member '_callback' of 'Handle' objects>\n    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>\n    │    └ <member '_context' of 'Handle' objects>\n    └ <Handle Task.task_wakeup(<Future finished result=None>)>\n  File \"/usr/local/lib/python3.10/site-packages/uvicorn/lifespan/on.py\", line 86, in main\n    await app(scope, self.receive, self.send)\n          │   │      │    │        │    └ <function LifespanOn.send at 0x7f2b02ab25f0>\n          │   │      │    │        └ <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>\n          │   │      │    └ <function LifespanOn.receive at 0x7f2b02ab2680>\n          │   │      └ <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>\n          │   └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          └ <uvicorn.middleware.proxy_headers.ProxyHeadersMiddleware object at 0x7f2b02e35030>\n  File \"/usr/local/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 84, in __call__\n    return await self.app(scope, receive, send)\n                 │    │   │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n                 │    │   │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n                 │    │   └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n                 │    └ <fastapi.applications.FastAPI object at 0x7f2b03a1df00>\n                 └ <uvicorn.middleware.proxy_headers.ProxyHeadersMiddleware object at 0x7f2b02e35030>\n  File \"/usr/local/lib/python3.10/site-packages/fastapi/applications.py\", line 292, in __call__\n    await super().__call__(scope, receive, send)\n                           │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n                           │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n                           └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n  File \"/usr/local/lib/python3.10/site-packages/starlette/applications.py\", line 122, in __call__\n    await self.middleware_stack(scope, receive, send)\n          │    │                │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │                │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │                └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          │    └ <starlette.middleware.errors.ServerErrorMiddleware object at 0x7f2b00b2de40>\n          └ <fastapi.applications.FastAPI object at 0x7f2b03a1df00>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 149, in __call__\n    await self.app(scope, receive, send)\n          │    │   │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          │    └ <starlette.middleware.exceptions.ExceptionMiddleware object at 0x7f2b00b2e3e0>\n          └ <starlette.middleware.errors.ServerErrorMiddleware object at 0x7f2b00b2de40>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 55, in __call__\n    await self.app(scope, receive, send)\n          │    │   │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          │    └ <fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware object at 0x7f2b00b2ddb0>\n          └ <starlette.middleware.exceptions.ExceptionMiddleware object at 0x7f2b00b2e3e0>\n  File \"/usr/local/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\n    await self.app(scope, receive, send)\n          │    │   │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │   └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          │    └ <fastapi.routing.APIRouter object at 0x7f2b036db460>\n          └ <fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware object at 0x7f2b00b2ddb0>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 707, in __call__\n    await self.lifespan(scope, receive, send)\n          │    │        │      │        └ <bound method LifespanOn.send of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │        │      └ <bound method LifespanOn.receive of <uvicorn.lifespan.on.LifespanOn object at 0x7f2b02e34670>>\n          │    │        └ {'type': 'lifespan', 'asgi': {'version': '3.0', 'spec_version': '2.0'}, 'state': {}, 'app': <fastapi.applications.FastAPI obj...\n          │    └ <function Router.lifespan at 0x7f2b01c4cca0>\n          └ <fastapi.routing.APIRouter object at 0x7f2b036db460>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 677, in lifespan\n    async with self.lifespan_context(app) as maybe_state:\n               │    │                └ <fastapi.applications.FastAPI object at 0x7f2b03a1df00>\n               │    └ <starlette.routing._DefaultLifespan object at 0x7f2b01d12470>\n               └ <fastapi.routing.APIRouter object at 0x7f2b036db460>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 566, in __aenter__\n    await self._router.startup()\n          │    │       └ <function Router.startup at 0x7f2b01c4cb80>\n          │    └ <fastapi.routing.APIRouter object at 0x7f2b036db460>\n          └ <starlette.routing._DefaultLifespan object at 0x7f2b01d12470>\n  File \"/usr/local/lib/python3.10/site-packages/starlette/routing.py\", line 654, in startup\n    await handler()\n          └ <function startup_event at 0x7f2b00b69990>\n\n  File \"/app/app/main.py\", line 21, in startup_event\n    await prepare_db()\n          └ <function prepare_db at 0x7f2b01cd5240>\n\n> File \"/app/app/services/startup/startup.py\", line 9, in prepare_db\n    await R.Type.add_one(title=\"IPv4\")\n          │ │    └ <classmethod(<function BaseRepo.add_one at 0x7f2b00b68a60>)>\n          │ └ <class 'app.repo.type_proxy.Type'>\n          └ <module 'app.repo' from '/app/app/repo/__init__.py'>\n\n  File \"/app/app/repo/repo_base.py\", line 27, in add_one\n    result = await session.execute(stmt)\n                   │       │       └ <sqlalchemy.sql.dml.Insert object at 0x7f2b009d08e0>\n                   │       └ <function AsyncSession.execute at 0x7f2b00d813f0>\n                   └ <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f2b009d0130>\n\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/ext/asyncio/session.py\", line 454, in execute\n    result = await greenlet_spawn(\n                   └ <function greenlet_spawn at 0x7f2b01afbac0>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 190, in greenlet_spawn\n    result = context.throw(*sys.exc_info())\n             │       │      │   └ <built-in function exc_info>\n             │       │      └ <module 'sys' (built-in)>\n             │       └ <method 'throw' of 'greenlet.greenlet' objects>\n             └ <_AsyncIoGreenlet object at 0x7f2b009b9a00 (otid=0x7f2b01d79e90) dead>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 2262, in execute\n    return self._execute_internal(\n           │    └ <function Session._execute_internal at 0x7f2b00e90af0>\n           └ <sqlalchemy.orm.session.Session object at 0x7f2b009d0280>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 2144, in _execute_internal\n    result: Result[Any] = compile_state_cls.orm_execute_statement(\n                   │      │                 └ <classmethod(<function BulkORMInsert.orm_execute_statement at 0x7f2b00e6d3f0>)>\n                   │      └ <class 'sqlalchemy.orm.bulk_persistence.BulkORMInsert'>\n                   └ typing.Any\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/bulk_persistence.py\", line 1276, in orm_execute_statement\n    result = conn.execute(\n             │    └ <function Connection.execute at 0x7f2b013a6cb0>\n             └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1412, in execute\n    return meth(\n           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.annotation.AnnotatedInsert object at 0x7f2b009d0940>>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           │          └ <function Connection._execute_clauseelement at 0x7f2b013a6f80>\n           └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1635, in _execute_clauseelement\n    ret = self._execute_context(\n          │    └ <function Connection._execute_context at 0x7f2b013a7130>\n          └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1844, in _execute_context\n    return self._exec_single_context(\n           │    └ <function Connection._exec_single_context at 0x7f2b013a71c0>\n           └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1984, in _exec_single_context\n    self._handle_dbapi_exception(\n    │    └ <function Connection._handle_dbapi_exception at 0x7f2b013a7400>\n    └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 2339, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n          │                    │              │                 └ IntegrityError('<class \\'asyncpg.exceptions.UniqueViolationError\\'>: duplicate key value violates unique constraint \"type_tit...\n          │                    │              └ (<class 'sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError'>, IntegrityError('<class \\'asyncpg.e...\n          │                    └ <method 'with_traceback' of 'BaseException' objects>\n          └ IntegrityError('(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \\'asyncpg.exceptions.UniqueViolationError\\'>: ...\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1965, in _exec_single_context\n    self.dialect.do_execute(\n    │    │       └ <function DefaultDialect.do_execute at 0x7f2b0123a560>\n    │    └ <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x7f2b00c303a0>\n    └ <sqlalchemy.engine.base.Connection object at 0x7f2b009d0a60>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 921, in do_execute\n    cursor.execute(statement, parameters)\n    │      │       │          └ ('IPv4',)\n    │      │       └ 'INSERT INTO type (title) VALUES ($1::VARCHAR) RETURNING type.id'\n    │      └ <function AsyncAdapt_asyncpg_cursor.execute at 0x7f2b00af2050>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 585, in execute\n    self._adapt_connection.await_(\n    │    └ <member '_adapt_connection' of 'AsyncAdapt_asyncpg_cursor' objects>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 125, in await_only\n    return current.driver.switch(awaitable)  # type: ignore[no-any-return]\n           │                     └ <coroutine object AsyncAdapt_asyncpg_cursor._prepare_and_execute at 0x7f2b00b0e960>\n           └ <_AsyncIoGreenlet object at 0x7f2b009b9a00 (otid=0x7f2b01d79e90) dead>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 185, in greenlet_spawn\n    value = await result\n                  └ <coroutine object AsyncAdapt_asyncpg_cursor._prepare_and_execute at 0x7f2b00b0e960>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 564, in _prepare_and_execute\n    self._handle_exception(error)\n    │    └ <function AsyncAdapt_asyncpg_cursor._handle_exception at 0x7f2b00af1ea0>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 515, in _handle_exception\n    self._adapt_connection._handle_exception(error)\n    │    │                                   └ UniqueViolationError('duplicate key value violates unique constraint \"type_title_key\"')\n    │    └ <member '_adapt_connection' of 'AsyncAdapt_asyncpg_cursor' objects>\n    └ <sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor object at 0x7f2b00b81840>\n  File \"/usr/local/lib/python3.10/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 802, in _handle_exception\n    raise translated_error from error\n          │                     └ UniqueViolationError('duplicate key value violates unique constraint \"type_title_key\"')\n          └ IntegrityError('<class \\'asyncpg.exceptions.UniqueViolationError\\'>: duplicate key value violates unique constraint \"type_tit...\n\nsqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint \"type_title_key\"\nDETAIL:  Key (title)=(IPv4) already exists.\n[SQL: INSERT INTO type (title) VALUES ($1::VARCHAR) RETURNING type.id]\n[parameters: ('IPv4',)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)\n", "record": {"elapsed": {"repr": "0:00:00.185579", "seconds": 0.185579}, "exception": {"type": "IntegrityError", "value": "(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint \"type_title_key\"\nDETAIL:  Key (title)=(IPv4) already exists.\n[SQL: INSERT INTO type (title) VALUES ($1::VARCHAR) RETURNING type.id]\n[parameters: ('IPv4',)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)", "traceback": true}, "extra": {}, "file": {"name": "startup.py", "path": "/app/app/services/startup/startup.py"}, "function": "prepare_db", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 9, "message": "An error has been caught in function 'prepare_db', process 'SpawnProcess-16' (64), thread 'MainThread' (139822723413824):", "module": "startup", "name": "app.services.startup.startup", "process": {"id": 64, "name": "SpawnProcess-16"}, "thread": {"id": 139822723413824, "name": "MainThread"}, "time": {"repr": "2023-11-21 09:02:57.303299+00:00", "timestamp": 1700557377.303299}}}